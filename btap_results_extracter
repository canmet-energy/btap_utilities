#!/home/nrcan/.rbenv/shims/ruby
require 'zlib'
require 'base64'
require 'csv'
require 'fileutils'
require 'optparse'
require 'yaml'
start = Time.now

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: btap_results_extracter [options]"
  opts.on('-f', '--filename NAME', 'CSV filename') { |v| options[:filename] = v }
end.parse!

raise OptionParser::MissingArgument if options[:filename].nil?
puts "Parsing #{options[:filename]} into ./osmfiles folder"


output_folder = './osm_files'
FileUtils::mkdir_p(output_folder)

osm_zip_index = -999
view_zip_index = -999
name = -999
id = -999
osm_counter = 0
csvfile = options[:filename]
open(csvfile) do |csv|
  is_header = true
  csv.each_line do |line|
    values = line.split(",")
    if is_header
      is_header = false
      values.each_with_index do |val,index|
        osm_zip_index = index if val.strip ==  "btapresults.model_osm_zip"
        view_zip_index = index if val.strip == "view_model.view_model_html_zip"
        name = index if val.strip == "name"
        id = index if val.strip == "_id"
      end
      raise("Could not find name or btapresults.zipped_model_osm column in csv file.") if name < 0 or osm_zip_index < 0 or view_zip_index < 0
    else

      puts "Writing #{values[id]}.osm"
      osm_string =  Zlib::Inflate.inflate(Base64.strict_decode64( values[ osm_zip_index ].strip ) )
      File.open("#{output_folder}/#{values[id]}.osm", 'w') {|f| f.write(osm_string) }

      puts "Writing #{values[id]}_3d.html"
      view_string = Zlib::Inflate.inflate(Base64.strict_decode64( values[ view_zip_index ].strip) )
      File.open("#{output_folder}/#{values[id]}_3d.html", 'w') {|f| f.write(view_string) }

      osm_counter +=1
    end
  end
end
puts "Created #{osm_counter} osm files in ./osm_file folder"

#Strip Zipped data from csv file otherwise it will not open in excel correctly.
original = CSV.read(csvfile, { headers: true, return_headers: true })
original.delete('btapresults.zipped_model_osm')
CSV.open("#{output_folder}/output.csv", 'w', col_sep: ',') do |csv|
  original.each do |row|
    csv << row
  end
end
puts "Stripped OSM data from #{options[:filename]} and saved result to ./osm_file/output.csv. \nNow useable by Excel"
puts "completed in #{Time.now - start} secs"
